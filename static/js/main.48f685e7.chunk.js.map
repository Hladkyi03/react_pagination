{"version":3,"sources":["utils.ts","items.ts","searchHelper.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","items","map","getSearchWith","currentParams","key","value","newParams","URLSearchParams","toString","set","Pagination","total","perPage","currentPage","useSearchParams","searchParams","buttonCount","Math","floor","pageNumbers","visibleItems","slice","handleBtnClick","number","className","cn","disabled","search","active","item","App","navigate","useNavigate","page","Number","get","firstDisplayedItem","lastDisplayedItem","length","id","onChange","e","newSearchParams","target","handleOnSelect","htmlFor","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.48f685e7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from './utils';\n\nexport const items = getNumbers(1, 42).map((n: number) => `Item ${n}`);\n","export const getSearchWith = (\n  currentParams: URLSearchParams,\n  key: string,\n  value: number,\n) => {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  newParams.set(key, value.toString());\n\n  return newParams;\n};\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\nimport { items } from '../../items';\nimport { getSearchWith } from '../../searchHelper';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const buttonCount = total % perPage === 0\n    ? Math.floor(total / perPage)\n    : Math.floor((total / perPage) + 1);\n\n  const pageNumbers = getNumbers(1, buttonCount);\n\n  const visibleItems = items\n    .slice(currentPage * perPage - perPage, currentPage * perPage);\n\n  const handlePrevClick = () => {\n    if (currentPage === 1) {\n      return searchParams.toString();\n    }\n\n    return getSearchWith(searchParams, 'page', currentPage - 1).toString();\n  };\n\n  const handleNextClick = () => {\n    if (currentPage === buttonCount) {\n      return searchParams.toString();\n    }\n\n    return getSearchWith(searchParams, 'page', currentPage + 1).toString();\n  };\n\n  const handleBtnClick = (number: number) => {\n    return getSearchWith(searchParams, 'page', number).toString();\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <Link\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            to={{ search: handlePrevClick() }}\n            aria-disabled={currentPage === 1}\n          >\n            «\n          </Link>\n        </li>\n\n        {pageNumbers.map(number => (\n          <li\n            key={number}\n            className={cn('page-item', {\n              active: number === currentPage,\n            })}\n          >\n            <Link\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              to={{ search: handleBtnClick(number) }}\n            >\n              {number}\n            </Link>\n          </li>\n        ))}\n\n        <li className={cn('page-item', {\n          disabled: currentPage === buttonCount,\n        })}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            to={{ search: handleNextClick() }}\n            aria-disabled={currentPage === buttonCount}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport {\n  Route, Routes, useNavigate, useSearchParams,\n} from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { items } from './items';\nimport { getSearchWith } from './searchHelper';\n\nexport const App: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const handleOnSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    let newSearchParams = getSearchWith(searchParams, 'page', 1);\n\n    newSearchParams = getSearchWith(\n      newSearchParams,\n      'perPage',\n      +e.target.value,\n    );\n\n    navigate(`?${newSearchParams}`);\n  };\n\n  const page = Number(searchParams.get('page')) || 1;\n\n  const perPage = Number(searchParams.get('perPage')) || 5;\n\n  const firstDisplayedItem = page * perPage - perPage + 1;\n  const lastDisplayedItem = page * perPage > items.length\n    ? items.length\n    : page * perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstDisplayedItem} - ${lastDisplayedItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => handleOnSelect(e)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={(\n            <Pagination\n              total={items.length}\n              perPage={perPage}\n              currentPage={page}\n            />\n          )}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}